{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(npm run seed:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(taskkill:*)",
      "Bash(cmd //c:*)",
      "Bash(npx prisma:*)",
      "Bash(npx tsx:*)",
      "WebSearch",
      "WebFetch(domain:flowbite.com)",
      "Bash(node:*)",
      "WebFetch(domain:sites.google.com)",
      "Bash(copy:*)",
      "Bash(tree:*)",
      "Bash(dir)",
      "Bash(dir appsbackend)",
      "Bash(dir apps)",
      "Bash(npm run:*)",
      "Bash(dir:*)",
      "Bash(rd:*)",
      "Bash(sqlite3:*)",
      "Bash(cmd /c:*)",
      "Bash(tasklist:*)",
      "Bash(npx kill-port:*)",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(git add:*)",
      "Bash(del appsbackendnul)",
      "Bash(rm:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(sed:*)",
      "Bash(apt:*)",
      "Bash(apt install:*)",
      "Bash(ln:*)",
      "Bash(nginx:*)",
      "Bash(systemctl restart:*)",
      "Bash(systemctl enable:*)",
      "Bash(pm2 start npm:*)",
      "Bash(pm2 save:*)",
      "Bash(pm2 startup:*)",
      "Bash(snap install:*)",
      "Bash(snap refresh:*)",
      "Bash(certbot:*)",
      "Bash(/snap/bin/certbot:*)",
      "Bash(ufw:*)",
      "Bash(ufw allow:*)",
      "Bash(systemctl reload:*)",
      "Bash(pm2 status:*)",
      "Bash(systemctl:*)",
      "Bash(nslookup:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(pm2 logs:*)",
      "Bash(pm2 restart:*)",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" npx prisma migrate deploy)",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" sqlite3 prisma/dev.db \"SELECT email FROM User WHERE email = ''student@fx-tiger-dojo.com'';\")",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" npx prisma db push)",
      "Bash(DATABASE_URL=\"file:./apps/backend/prisma/dev.db\" npx tsx apps/backend/scripts/restore-users.ts)",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" npx tsx scripts/restore-users.ts)",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" npx prisma generate)",
      "Bash(pm2 stop:*)",
      "Bash(DATABASE_URL=\"file:./apps/backend/prisma/dev.db\" pm2 start npm --name \"backend\" -- run dev:backend)",
      "Bash(pm2 delete:*)",
      "Bash(PORT=3010 pm2 start npm --name \"frontend-3010\" -- run dev:frontend)",
      "Bash(PORT=3010 pm2 start npm --name \"frontend-3010\" -- run dev)",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" npx prisma migrate dev --name init)",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" npx prisma db push --accept-data-loss)",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" sqlite3 prisma/dev.db \"CREATE TABLE IF NOT EXISTS User (id TEXT PRIMARY KEY, email TEXT UNIQUE NOT NULL, password TEXT NOT NULL, name TEXT NOT NULL, role TEXT DEFAULT ''STUDENT'', createdAt TEXT DEFAULT CURRENT_TIMESTAMP, updatedAt TEXT DEFAULT CURRENT_TIMESTAMP, isActive BOOLEAN DEFAULT 1, emailVerified BOOLEAN DEFAULT 0);\")",
      "Bash(DATABASE_URL=\"file:./prisma/dev.db\" npx prisma migrate reset --force)",
      "Bash(git config:*)",
      "Read(//root/**)",
      "Bash(env)",
      "Bash(git remote set-url:*)",
      "Bash(GIT_TERMINAL_PROMPT=0 git push https://github.com/L0ve-Machine/tiger-dojo.git master)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Read(//etc/nginx/sites-available/**)",
      "Bash(npx next build:*)",
      "Bash(PORT=3010 pm2 start npm --name \"frontend-3010\" -- start)",
      "Bash(PORT=3010 npm run dev)"
    ],
    "deny": [],
    "ask": []
  }
}